import os

Import('env')
env = env

TIMELOOP_PATH = env["TIMELOOP_BASE_DIR"]

env.Append(CPPDEFINES = [('BUILD_BASE_DIR', '\\"' + env["BUILD_BASE_DIR"] + '\\"')])
env.Append(CPPPATH = ['src/include', TIMELOOP_PATH + '/src'])
env["CPPDEFINES"] += [('USE_ACCELERGY')]

if GetOption('debug'):
    env.Append(CCFLAGS = ['-g', '-O0'])
else:
    env.Append(CCFLAGS = ['-g', '-O3'])
env.Append(CCFLAGS = ['-Werror', '-Wall', '-Wextra', '-fmax-errors=1', '-std=c++14', '-pthread'])

env.Append(LIBPATH = [TIMELOOP_PATH + '/lib'])
env.Append(LIBS = ['timeloop-model'])

env.Append(LINKFLAGS = ['-std=c++11', '-static-libgcc', '-static-libstdc++', '-pthread'])
env.Append(LIBS = ['config++','yaml-cpp'])
env.Append(LINKFLAGS = [ '-Wl,--whole-archive', '-static', '-lpthread', '-Wl,--no-whole-archive'])

env.Append(LIBS = ['boost_iostreams', 'boost_serialization'])

if os.environ.get('BOOSTDIR'):
    env.Append(CPPFLAGS = ['-I' + os.environ['BOOSTDIR'] + '/include'])
    env.Append(LIBPATH = [os.environ['BOOSTDIR'] + '/lib'])

if "LIBCONFIGPATH" in os.environ:
    LIBCONFIGPATH = os.environ["LIBCONFIGPATH"]
    env["LIBPATH"] += [LIBCONFIGPATH + '/lib']
    env["CPPFLAGS"] += ['-I' + LIBCONFIGPATH + '/include']

if "YAMLCPPPATH" in os.environ:
    YAMLCPPPATH = os.environ["YAMLCPPPATH"]
    env["LIBPATH"] += [YAMLCPPPATH + '/lib']
    env["CPPFLAGS"] += ['-I' + YAMLCPPPATH + '/include']


bin_medea = env.Program(target = 'medea', source = ['main.cpp', TIMELOOP_PATH + '/src/mapspaces/mapspace-base.cpp'])

env.Install(env["BUILD_BASE_DIR"] + '/bin', [ bin_medea ])
